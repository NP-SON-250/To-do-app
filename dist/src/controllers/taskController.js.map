{"version":3,"file":"taskController.js","names":["_taskModel","_interopRequireDefault","require","createTask","exports","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","_req$body","taskName","taskDuration","checkTaskName","addTask","wrap","_callee$","_context","prev","next","body","abrupt","status","json","message","taskTable","findOne","sent","create","data","t0","error","stop","_x","_x2","apply","arguments","getTasks","_ref2","_callee2","displayedTasks","_callee2$","_context2","find","statusO","_x3","_x4","updateTask","_ref3","_callee3","id","_req$body2","checkTaskId","updatedTask","_callee3$","_context3","params","findById","_id","findByIdAndUpdate","_x5","_x6","deleteTask","_ref4","_callee4","findTask","deletedTask","_callee4$","_context4","findByIdAndDelete","_x7","_x8","getTasksByDuration","_ref5","_callee5","tasks","_callee5$","_context5","length","_x9","_x10"],"sources":["../../../src/controllers/taskController.js"],"sourcesContent":["import taskTable from \"../models/taskModel\";\r\n\r\nexport const createTask = async (req, res) =>{\r\n    try {\r\n        const {taskName, taskDuration} = req.body;\r\n        if(!taskName || !taskDuration){\r\n            return res.status(400).json({\r\n                status: \"400\",\r\n                message: \"All fields are required\",\r\n            });\r\n        }\r\n        const checkTaskName = await taskTable.findOne({taskName});\r\n        if(checkTaskName){\r\n            return res.status(400).json({\r\n                status: \"400\",\r\n                message: \"Task name already exist in task list\",\r\n            });\r\n        }\r\n        \r\n        const addTask = await taskTable.create({\r\n            taskName,\r\n            taskDuration,\r\n        });\r\n        return res.status(201).json({\r\n            status: \"201\",\r\n            message: \"Your task added\",\r\n            data: addTask,\r\n        });\r\n        \r\n    } catch (error) {\r\n        return res.status(500).json({\r\n            status: \"500\",\r\n            message: \"Failed to add task\",\r\n            error: error.message,\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getTasks = async (req, res) =>{\r\n    try {\r\n        const displayedTasks = await taskTable.find();\r\n\r\n        return res.status(201).json({\r\n            status: \"201\",\r\n            message: \"Tasks retrieved\",\r\n            data: displayedTasks,\r\n        });\r\n    } catch (error) {\r\n        return res.statusO(500).json({\r\n            status: \"500\",\r\n            message: \"Failed to retrieve tasks\",\r\n            error: error.message,\r\n        });\r\n        \r\n    }\r\n};\r\n\r\nexport const updateTask = async (req, res) =>{\r\n    try {\r\n        const {id} =req.params;\r\n        const {taskName, taskDuration} = req.body;\r\n        const checkTaskId = await taskTable.findById(id);\r\n        if(!checkTaskId)\r\n            return res.status(404).json({\r\n                status: \"404\",\r\n                message: \"Task not found\",\r\n            });\r\n        \r\n        const checkTaskName = await taskTable.findOne({\r\n            taskName: req.body.taskName,\r\n         });\r\n         if(checkTaskName){\r\n           if(checkTaskName._id != id){\r\n            return res.status(500).json({\r\n              status: \"500\",\r\n              message: \"Task name exist in database\",\r\n            });\r\n           }\r\n         }\r\n        \r\n            const updatedTask = await taskTable.findByIdAndUpdate(id,{\r\n                taskName,\r\n                taskDuration,\r\n            });\r\n            return res.status(201).json({\r\n                status: \"201\",\r\n                message: \"Task updated successfully\",\r\n                data: updatedTask,\r\n            })\r\n        \r\n        \r\n    } catch (error) {\r\n        return res.status(500).json({\r\n            status: \"500\",\r\n            message: \"Failed to update task\",\r\n            error: error.message,\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteTask = async (req, res) =>{\r\n    try {\r\n      const {id} = req.params;\r\n      const findTask = await taskTable.findById(id);\r\n      if (!findTask) {\r\n        return res.status(404).json({\r\n          status: \"404\",\r\n          message: \"Task not found\",\r\n        });\r\n      };\r\n      const deletedTask= await taskTable.findByIdAndDelete(id);\r\n  \r\n      return res.status(200).json({\r\n        status: \"200\",\r\n        message: \"Task deleted successfully\",\r\n        data: deletedTask,\r\n      });\r\n    } catch (error) {\r\n      return res.status(500).json({\r\n        status: \"500\",\r\n        message: \"Error occurred\",\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  // find tasks based on duration\r\n  export const getTasksByDuration = async (req, res) => {\r\n    const { taskDuration } = req.params;\r\n  \r\n    try {\r\n      const tasks = await taskTable.find({ taskDuration });\r\n  \r\n      if (tasks.length === 0) {\r\n        return res.status(404).json({\r\n          status: \"404\",\r\n          message: \"No tasks for\" + \" \"+taskDuration +\" \"+\"found!!\",\r\n        });\r\n      }\r\n  \r\n      return res.status(200).json({\r\n        status: \"200\",\r\n        message: \"Tasks retrieved are\" + \" \"+ taskDuration + \" \"+\"tasks\",\r\n        data: tasks,\r\n      });\r\n    } catch (error) {\r\n      return res.status(500).json({\r\n        status: \"500\",\r\n        message: \"Failed to retrieve tasks by task duration\",\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n  "],"mappings":"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"}